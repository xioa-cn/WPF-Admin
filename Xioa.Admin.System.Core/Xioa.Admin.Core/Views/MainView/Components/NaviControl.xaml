<UserControl
    x:Class="Xioa.Admin.Core.Views.MainView.Components.NaviControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:Xioa.Admin.Core.Views.MainView.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:Xioa.Admin.Core.Views.MainView"
    x:Name="Control"
    SizeChanged="UserControl_SizeChanged"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converter:BoolToAngleConverter x:Key="BoolToAngleConverter" />
        <converter:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />

        <!--  弹出菜单项模板  -->
        <DataTemplate x:Key="PopupItemTemplate">
            <RadioButton
                Height="40"
                Padding="12,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Background="Transparent"
                BorderThickness="0"
                Click="NavToPage_Click"
                GroupName="NaviGroup"
                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                Tag="{Binding}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        FontSize="13"
                        Foreground="{DynamicResource Text.Primary.Brush}"
                        Text="{Binding Content}" />
                    <Path
                        x:Name="expandIcon"
                        Grid.Column="1"
                        Width="10"
                        Height="10"
                        Margin="8,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Data="M0,0 L5,5 L10,0"
                        Stroke="{DynamicResource Text.Primary.Brush}"
                        StrokeThickness="1"
                        Visibility="{Binding HasChildren, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Path.RenderTransform>
                            <RotateTransform CenterX="5" CenterY="5">
                                <RotateTransform.Angle>
                                    <Binding Converter="{StaticResource BoolToAngleConverter}" Path="IsExpanded" />
                                </RotateTransform.Angle>
                            </RotateTransform>
                        </Path.RenderTransform>
                    </Path>
                </Grid>
                <RadioButton.Template>
                    <ControlTemplate TargetType="RadioButton">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource NavItem.Background.Selected}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Primary.Brush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>
        </DataTemplate>

        <Style x:Key="PopupStyle" TargetType="Popup">
            <Setter Property="IsOpen" Value="False" />
            <Setter Property="StaysOpen" Value="True" />
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RadioButton}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsOpen" Value="True" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <HierarchicalDataTemplate x:Key="NavItemTemplate" ItemsSource="{Binding Children}">
            <RadioButton
                Name="Radio"
                Height="40"
                Padding="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                BorderThickness="0"
                Click="NavToPage_Click"
                GroupName="NaviGroup"
                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                Tag="{Binding}">
                <RadioButton.Resources>
                    <Style TargetType="RadioButton">
                        <Setter Property="IsEnabled" Value="{Binding LoginAuth, Converter={StaticResource RouterIsEnabledConverter}}" />
                        <Setter Property="Visibility" Value="{Binding LoginAuth, Converter={StaticResource RouterVisibilityConverter}}" />
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Cursor" Value="No" />
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </RadioButton.Resources>
                <RadioButton.Template>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Border
                                x:Name="border"
                                Background="Transparent"
                                BorderThickness="0"
                                CornerRadius="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40" />
                                        <ColumnDefinition Width="*">
                                            <ColumnDefinition.Style>
                                                <Style TargetType="ColumnDefinition">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55">
                                                            <Setter Property="Width" Value="0" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ColumnDefinition.Style>
                                        </ColumnDefinition>
                                        <ColumnDefinition Width="Auto">
                                            <ColumnDefinition.Style>
                                                <Style TargetType="ColumnDefinition">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55">
                                                            <Setter Property="Width" Value="0" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ColumnDefinition.Style>
                                        </ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Path
                                        x:Name="pathMenu"
                                        Width="26"
                                        Height="26"
                                        Margin="12,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding Icon}"
                                        Fill="{DynamicResource Text.Primary.Brush}"
                                        Stretch="Fill">
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55">
                                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                                        <Setter Property="Margin" Value="0" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}, Converter={StaticResource IsFirstLevelConverter}}" Value="Collapsed">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                    <TextBlock
                                        Grid.Column="1"
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        FontSize="18"
                                        Foreground="{DynamicResource Text.Primary.Brush}"
                                        Text="{Binding Content}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Path
                                        x:Name="expandIcon"
                                        Grid.Column="2"
                                        Width="10"
                                        Height="10"
                                        Margin="0,0,12,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Data="M0,0 L5,5 L10,0"
                                        Stroke="{DynamicResource Text.Primary.Brush}"
                                        StrokeThickness="1">
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding HasChildren}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                        <Path.RenderTransform>
                                            <RotateTransform CenterX="5" CenterY="5">
                                                <RotateTransform.Angle>
                                                    <Binding Converter="{StaticResource BoolToAngleConverter}" Path="IsExpanded" />
                                                </RotateTransform.Angle>
                                            </RotateTransform>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Border>

                            <!--  Popup for items with children  -->
                            <!--
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                StaysOpen="True"
                                Placement="Right"
                                PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                PopupAnimation="Fade">
                                <Popup.Style>
                                    <Style TargetType="Popup">
                                        <Setter Property="IsOpen" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55" />
                                                    <Condition Binding="{Binding HasChildren}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RadioButton}, Path=IsMouseOver}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsOpen" Value="True" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Popup.Style>
                                <Border
                                    Background="{DynamicResource Background.Brush}"
                                    BorderBrush="{DynamicResource Border.Brush}"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    MouseLeave="Popup_MouseLeave"
                                    MouseEnter="Popup_MouseEnter">
                                    <StackPanel MinWidth="180">
                                        <RadioButton
                                            Height="40"
                                            Padding="12,0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Click="NavToPage_Click"
                                            GroupName="NaviGroup"
                                            IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                            Tag="{Binding}">
                                            <TextBlock
                                                FontSize="13"
                                                Foreground="{DynamicResource Text.Primary.Brush}"
                                                Text="{Binding Content}" />
                                            <RadioButton.Template>
                                                <ControlTemplate TargetType="RadioButton">
                                                    <Border
                                                        x:Name="popupBorder"
                                                        Background="Transparent"
                                                        BorderThickness="0">
                                                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="popupBorder" Property="Background" Value="{DynamicResource NavItem.Background.Selected}" />
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="popupBorder" Property="Background" Value="{DynamicResource Primary.Brush}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </RadioButton.Template>
                                        </RadioButton>
                                        <ItemsControl ItemsSource="{Binding Children}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource PopupItemTemplate}" />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </Border>
                            </Popup>-->

                            <!--  ToolTip for items without children  -->
                            <!--<Grid.ToolTip>
                                <ToolTip
                                    Background="{DynamicResource Background.Brush}"
                                    BorderBrush="{DynamicResource Border.Brush}"
                                    BorderThickness="1">
                                    <ToolTip.Style>
                                        <Style TargetType="ToolTip">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding HasChildren}" Value="False" />
                                                        <Condition Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToolTip.Style>
                                    <TextBlock
                                        Padding="12,8"
                                        FontSize="13"
                                        Foreground="{DynamicResource Text.Primary.Brush}"
                                        Text="{Binding Content}" />
                                </ToolTip>
                            </Grid.ToolTip>-->
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Primary.Brush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource NavItem.Background.Selected}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55">
                                <Setter TargetName="border" Property="ToolTip" Value="{x:Null}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </RadioButton.Template>

            </RadioButton>
        </HierarchicalDataTemplate>
    </UserControl.Resources>

    <Grid Background="{DynamicResource Background.Brush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ScrollViewer
            VerticalAlignment="Stretch"
            HorizontalScrollBarVisibility="Disabled"
            PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"
            VerticalScrollBarVisibility="Hidden">
            <TreeView
                x:Name="naviTreeView"
                Background="Transparent"
                BorderThickness="0"
                ItemTemplate="{StaticResource NavItemTemplate}"
                ItemsSource="{Binding Source={x:Static vm:MainViewModel.TreeItemModels}}"
                VirtualizingStackPanel.IsVirtualizing="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsEnabled" Value="{Binding LoginAuth, Converter={StaticResource RouterIsEnabledConverter}}" />
                        <Setter Property="Visibility" Value="{Binding LoginAuth, Converter={StaticResource RouterVisibilityConverter}}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Border Margin="0,10,0,0" CornerRadius="10">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ContentPresenter
                                                x:Name="PART_Header"
                                                HorizontalAlignment="Stretch"
                                                ContentSource="Header" />
                                            <ItemsPresenter
                                                x:Name="ItemsHost"
                                                Grid.Row="1"
                                                Margin="0" />
                                            <Grid.ToolTip>
                                                <ToolTip>
                                                    <!--<Border>-->
                                                    <TextBlock Text="{Binding Content}" />
                                                    <!--</Border>-->
                                                    <!--<ToolTip.Resources>
                                                        <Style TargetType="ToolTip">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate>
                                                                        <Border Width="100" Height="50">
                                                                            <ContentPresenter />
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToolTip.Resources>-->
                                                </ToolTip>
                                            </Grid.ToolTip>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Cursor" Value="No" />
                                        </Trigger>
                                        <Trigger Property="IsExpanded" Value="False">
                                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding ElementName=Control, Path=ActualWidth}" Value="55">
                                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Cursor" Value="No" />
                            </Trigger>
                            <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource Primary.Brush}" />
                            </DataTrigger>


                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        </ScrollViewer>
    </Grid>
</UserControl>